{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/posts.js"],"names":["ListLink","props","style","display","marginRight","color","backgroundImage","to","children","Header","siteTitle","margin","maxWidth","padding","textShadow","listStyle","float","defaultProps","Layout","data","site","siteMetadata","title","marginLeft","Posts","console","log","allMarkdownRemark","totalCount","edges","map","node","key","id","fields","slug","textDecoration","frontmatter","date","excerpt","query"],"mappings":"4IAIMA,EAAW,SAAAC,GAAK,OACpB,wBAAIC,MAAO,CAACC,QAAS,eAAgBC,YAAa,SAChD,kBAAC,OAAD,CAAMF,MAAO,CAACG,MAAO,OAAQC,gBAAiB,QAASC,GAAIN,EAAMM,IAAKN,EAAMO,YAI1EC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,gCACE,yBACER,MAAO,CACLS,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,kBAAC,OAAD,CAAMN,GAAI,IAAKL,MAAO,CAAEY,WAAY,OAAQR,gBAAiB,SAC3D,wBAAIJ,MAAO,CAAES,OAAQ,EAAGR,QAAS,WAC9BO,IAGL,wBAAIR,MAAO,CAACa,UAAW,OAAQC,MAAO,UACpC,kBAAC,EAAD,CAAUT,GAAI,KAAd,QACA,kBAAC,EAAD,CAAUA,GAAI,WAAd,SACA,kBAAC,EAAD,CAAUA,GAAI,WAAd,SACA,kBAAC,EAAD,CAAUA,GAAI,aAAd,eAURE,EAAOQ,aAAe,CACpBP,UAAU,IAGGD,QCIAS,IAjCA,SAAC,GAAkB,IAAhBV,EAAe,EAAfA,SACVW,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQT,UAAWS,EAAKC,KAAKC,aAAaC,QAC1C,yBACEpB,MAAO,CACLS,OAAQ,OACRY,WAAW,YACXnB,YAAY,YACZQ,SAAU,IACVC,QAAQ,wBAGV,8BAAOL,O,kCCpCf,8FAgCegB,UA5BD,SAAC,GAAY,IAAXL,EAAU,EAAVA,KAEd,OADAM,QAAQC,IAAIP,GAEV,kBAAC,IAAD,KACE,qCAGA,4BAAKA,EAAKQ,kBAAkBC,WAA5B,UACCT,EAAKQ,kBAAkBE,MAAMC,KAAI,gBAAEC,EAAF,EAAEA,KAAF,OAChC,yBAAKC,IAAKD,EAAKE,IACb,kBAAC,OAAD,CACE1B,GAAIwB,EAAKG,OAAOC,KAChBjC,MAAO,CAACkC,eAAgB,OAAQ/B,MAAO,YAEvC,4BACG0B,EAAKM,YAAYf,MAAO,IACzB,0BAAMpB,MAAO,CAACG,MAAO,SAArB,KACK0B,EAAKM,YAAYC,OAGxB,2BAAIP,EAAKQ,gBAUd,IAAMC,EAAK,c","file":"component---src-pages-posts-js-096655fb2e80fc01de34.js","sourcesContent":["import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport {Link} from \"gatsby\"\n\nconst ListLink = props => (\n  <li style={{display: \"inline-block\", marginRight: \"1rem\"}}>\n    <Link style={{color: '#000', backgroundImage: 'none'}} to={props.to}>{props.children}</Link>\n  </li>\n)\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 800,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <Link to={\"/\"} style={{ textShadow: 'none', backgroundImage: 'none'}}>\n        <h3 style={{ margin: 0, display: \"inline\" }}>\n          {siteTitle}\n        </h3>\n      </Link>\n      <ul style={{listStyle: 'none', float: 'right'}}>\n        <ListLink to={\"/\"}>Home</ListLink>\n        <ListLink to={\"/posts/\"}>Posts</ListLink>\n        <ListLink to={\"/about/\"}>About</ListLink>\n        <ListLink to={\"/contact/\"}>Contact</ListLink>\n      </ul>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: \"auto\",\n          marginLeft: `3rem auto`,\n          marginRight: `3rem auto`,\n          maxWidth: 800,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react';\nimport { graphql, Link } from \"gatsby\";\nimport Layout from '../components/layout';\n\nconst Posts = ({data}) => {\n  console.log(data);\n  return (\n    <Layout>\n      <h1>\n        Posts\n      </h1>\n      <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n      {data.allMarkdownRemark.edges.map(({node}) => (\n        <div key={node.id}>\n          <Link\n            to={node.fields.slug}\n            style={{textDecoration: 'none', color: 'inherit'}}\n            >\n            <h3>\n              {node.frontmatter.title}{\" \"}\n              <span style={{color: '#bbb'}}>\n                â€” {node.frontmatter.date}\n              </span>\n            </h3>\n            <p>{node.excerpt}</p>\n          </Link>\n        </div>\n      ))}\n    </Layout>\n  )\n}\n\nexport default Posts;\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n          }\n          timeToRead\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;"],"sourceRoot":""}