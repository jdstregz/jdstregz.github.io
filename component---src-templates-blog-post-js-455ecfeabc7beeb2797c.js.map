{"version":3,"sources":["webpack:///./src/images/logo.png","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/templates/blog-post.js"],"names":["module","exports","ListLink","props","style","display","marginRight","marginBottom","color","backgroundImage","to","children","Header","siteTitle","margin","maxWidth","padding","flexDirection","alignItems","width","height","objectFit","src","logo","alt","textShadow","flex","defaultProps","Layout","data","site","siteMetadata","title","marginLeft","BlogPost","post","markdownRemark","frontmatter","dangerouslySetInnerHTML","__html","html","query"],"mappings":"+EAAAA,EAAOC,QAAU,IAA0B,oD,wGCKrCC,EAAW,SAAAC,GAAK,OACpB,wBAAIC,MAAO,CAACC,QAAS,eAAgBC,YAAa,OAAQC,aAAc,IACtE,kBAAC,OAAD,CAAMH,MAAO,CAACI,MAAO,OAAQC,gBAAiB,QAASC,GAAIP,EAAMO,IAAKP,EAAMQ,YAI1EC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,gCACE,yBACET,MAAO,CACLU,OAAO,SACPC,SAAU,IACVC,QAAQ,oBACRX,QAAS,OACTY,cAAe,MACfC,WAAY,WAGd,yBAAKd,MAAO,CAACe,MAAO,GAAIC,OAAQ,GAAIC,UAAW,UAAWf,YAAa,EAAGC,aAAc,GAAIe,IAAKC,IAAMC,IAAK,SAC5G,kBAAC,OAAD,CAAMd,GAAI,IAAKN,MAAO,CAAEqB,WAAY,OAAQhB,gBAAiB,OAAQiB,KAAM,IACzE,wBAAItB,MAAO,CAAEU,OAAQ,IAClBD,IAGL,kBAAC,EAAD,CAAUH,GAAI,KAAd,QACA,kBAAC,EAAD,CAAUA,GAAI,WAAd,SACA,kBAAC,EAAD,CAAUA,GAAI,WAAd,SACA,kBAAC,EAAD,CAAUA,GAAI,aAAd,cASNE,EAAOe,aAAe,CACpBd,UAAU,IAGGD,QCCAgB,IAjCA,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SACVkB,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQhB,UAAWgB,EAAKC,KAAKC,aAAaC,QAC1C,yBACE5B,MAAO,CACLU,OAAQ,OACRmB,WAAW,YACX3B,YAAY,YACZS,SAAU,IACVC,QAAQ,wBAGV,8BAAOL,O,qICpCf,kFAgBeuB,UAZE,SAAC,GAAY,IACtBC,EADqB,EAAVN,KACCO,eAClB,OACE,kBAAC,IAAD,KACE,6BACE,4BAAKD,EAAKE,YAAYL,OACtB,yBAAKM,wBAAyB,CAACC,OAAQJ,EAAKK,WAQ7C,IAAMC,EAAK","file":"component---src-templates-blog-post-js-455ecfeabc7beeb2797c.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/logo-214ebf893e116698cf8aa9631f59929d.png\";","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport {Link} from \"gatsby\"\nimport logo from '../images/logo.png';\n\nconst ListLink = props => (\n  <li style={{display: \"inline-block\", marginRight: \"1rem\", marginBottom: 0}}>\n    <Link style={{color: '#000', backgroundImage: 'none'}} to={props.to}>{props.children}</Link>\n  </li>\n)\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 800,\n        padding: `1.45rem 1.0875rem`,\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      }}\n    >\n      <img style={{width: 30, height: 30, objectFit: \"contain\", marginRight: 8, marginBottom: 4}} src={logo} alt={\"Logo\"}/>\n      <Link to={\"/\"} style={{ textShadow: 'none', backgroundImage: 'none', flex: 1}}>\n        <h3 style={{ margin: 0 }}>\n          {siteTitle}\n        </h3>\n      </Link>\n      <ListLink to={\"/\"}>Home</ListLink>\n      <ListLink to={\"/posts/\"}>Posts</ListLink>\n      <ListLink to={\"/about/\"}>About</ListLink>\n      <ListLink to={\"/contact/\"}>Contact</ListLink>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: \"auto\",\n          marginLeft: `3rem auto`,\n          marginRight: `3rem auto`,\n          maxWidth: 800,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react';\nimport Layout from '../components/layout';\nimport {graphql} from \"gatsby\"\n\nconst BlogPost = ({data}) => {\n  const post = data.markdownRemark\n  return (\n    <Layout>\n      <div>\n        <h1>{post.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{__html: post.html}}/>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogPost;\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`;"],"sourceRoot":""}